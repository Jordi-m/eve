EVE CORE
http://almende.github.com/eve/


2013-02-22, version 0.18

- Implemented support for a resource name for xmpp connections.
- Implemented subscriptionId for subscriptions, which can be used to uniquely
  identify any subscription. 
- Renamed "context" to "state" (for example FileContext is now called 
  FileState).
- Renamed "class" to "type" in the AgentServlet, and consistently renamed
  everything internally. Everything is backwards compatible.
- Improvements in the agents web interface.
- Minor bug fixes in the XmppService and RunnableScheduler.


2012-01-25, version 0.17

- In the configuration, a set of agents can be configured to be created
  on system startup when they are not existing. To configure agents, a map
  with agentId/agentClass can be provided under "bootstrap", "agents":
      bootstrap:
        agents:
          calc_agent_1: com.almende.eve.agent.example.CalcAgent
          echo_agent_1: com.almende.eve.agent.example.EchoAgent
- Added methods create and delete to the life cycle of an agent. Create is 
  called once when the agent is created, and delete is called once when the
  agent is deleted. The methods can be utilized to perform some custom action
  on creation or deletion of an agent.
- All open XMPP Connections are persisted and are automatically reconnected 
  after a server restart.
- Scheduled tasks are persisted, and are automatically re-scheduled after a
  system restart.
- Implemented @Sender parameter annotation, which can be used to retrieve
  the senders url. Currently only applicable for XMPP. Example usage:
      public String ping(@Name("text") String text, @Sender String sender) {
          System.out.println("Ping text: " + text + ", sender: " + sender);
      }
- SchedulerFactory is created to manage and persist scheduled tasks. 
  In the eve.yaml configuration, a SchedulerFactory class must be specified  
  instead of a Scheduler class.
- Added validation of an Agents class on agent creation.
- Improved functionality for reading and merging (inherited) annotations.
- Renamed a number of classes:
  - XmppTransportService -> XmppService
  - HttpTransportService -> HttpService


2013-01-17, version 0.16

- Note: Eve 0.16 is incompatible with 0.15
- Annotations @Name and @Required do not need to be defined in an agents
  implementation, when the annotations for the methods are defined in the agents
  interface.
- Moved @Name and @Required annotations from json.annotation to 
  eve.agent.annotation.
- Renamed "services" to "transport". XmppService is now called 
  XmppTransportService, HttpService is now called HttpTransportService.
- Moved JSONRPC classes to com.almende.eve.rpc.jsonrpc.
- Removed Session objects.
- Fixed requiring a sender for all calls via the AgentFactory.
- Fixed method hasInterface not finding extended interfaces.


2013-01-11, version 0.15

- The send method of the Agent is more generic and no longer only accepts an
  ObjectNode as params, but also a Map or POJO. 
- An agent proxy can be created via the AgentFactory by providing a Java 
  Interface. So instead of Agent.send(url, method, params, type) where the 
  method is a string and one has to prepare an object with the parameters, one 
  can create a proxy for the agent and execute a regular java method call like
  ProxyAgent.method(a, b).
  When a call is made to a local agent, the local agents method is immediately
  invoked, without converting the call into JSON-RPC.
- Improved stability of the agents context.


2012-12-21, version 0.14

- Implemented synchronous send for the XmppService.
- Re-implemented the LogAgent, used to monitor an agents events in their 
  web interface.


2012-12-14, version 0.13

- Updated the agents web interface to show all its urls
- Renamed the parameter XmppService.serviceName to XmppService.service


2012-12-13, version 0.12

- The AgentServlet registers itself to the AgentFactory now. 
  Servlet configuration is therefore moved from eve.yaml to web.xml.
- The method getAgentFactory is moved from the context to the agent itself.
- The method getScheduler is moved from the context to the agent itself.
- Scheduler must be configured in eve.yaml now, the scheduler is no longer 
  coupled to the ContextFactory.


2012-12-06, version 0.11

- Major change in the core of Eve. Incompatible with previous versions.
- Implemented support for multiple communication services. 
- Agents must now explicitly be created before they can be invoked. The
  AgentFactory contains methods to create, get, and delete agents, and 
  the ContextFactory is adjusted for this purpose.
- Implemented messaging protocol XMPP.
- Configuration of agent classes is no longer needed.
- JSONRequest, JSONResponse, and JSONRPCException are now less strict, they
  are more friendly to invalid input.


2012-09-18, version 0.10

- The web interface of the agents now has an option to enable/disable logging
  events using a LogAgent.
- Fixed some minor bugs in error reporting in the agents web interface.


2012-09-10, version 0.9.1

- Fixed: Context did not load an agents context with a case insensitive 
  className.


2012-09-07, version 0.9

- Created a record logger to log requests to agents. Not yet in use though.
- AgentFactory created which allows for local creation/invocation of agents.
- JSON-RPC requests are routed via the agents context, which is now capable
  of routing requests to local agents locally, instead of sending a
  regular HTTP POST request.


2012-08-22, version 0.8

- Event callbacks (fired via "trigger") are now send asynchronously to all
  subscribers. This allows for sending all callbacks in parallel, and 
  prevents any of the subscribers blocking the trigger method. 
- Fixed a bug in the agent interface, not displaying responses with a boolean
  result with value false.


2012-08-03, version 0.7

- Added a convenience method send(url, method, params, type) to the JSONRPC 
  class
- Fixed the SingleAgentServlet, which now works correctly with the multiple
  resources for the web page of an agent.


2012-07-03, version 0.6

- Updated agents web interface
- Added JSON-RPC class validation
- Changed the Context: it now extends Map, which allows for better/easier Java
  integration.
- FileContext created. Stores agents data on disk.
- Agents interface improved: methods-form now handles parameter types correctly.
- fixed a bug in JSONRPC which wrongly identified List and Set as a primitive 
  types.


2012-06-08, version 0.5

- Context adjusted:
  - return type must now be provided when getting a parameter
  - put method now returns a boolean with the success value.
- Session class added, containing the raw http request and response


2012-06-01, version 0.4

- Changed the JSON deserialization to allow non-matched fields
- Small changes


2012-05-29, version 0.3

- Fixed a bug in JSONResponse, not throwing an error when in the response
- Changed JSONResponse: getResult now requires to specify the return type.
  This is necessary for correct deserialization.
- An agents web interface can now handle resources
- The library includes the required javascript libraries (jquery, angularjs)
  used for the agents web interface.


2012-05-21, version 0.2

- Implemented configuration file using YAML


2012-05-14, version 0.1

- Servlets implemented for hosting agents
- Base class Agent created
- JSON-RPC implemented
- HTML interface for agents implemented
- Context implemented
- Events implemented (subscribe/unsubscribe/trigger)
- Schedular implemented
- Example agents implemented
